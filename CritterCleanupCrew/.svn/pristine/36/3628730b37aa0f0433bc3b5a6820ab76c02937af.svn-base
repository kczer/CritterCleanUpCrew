package settables;

import java.io.File;
import java.io.FileNotFoundException;
import java.security.Policy.Parameters;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import model.Actionable;
import model.GameState;
import model.Position;

public abstract class Settable implements Actionable{
	protected double hitPoints; //number of hitpoints (remaining)
	protected Position position; //position of plant on field
	protected int cost;  //cost to plant
	protected int ticksSinceAction;  //self explanatory, for spawning wildlife
	protected int ticksToNextAction;
	
	
	/**
	 * Returns the name of this Settable, specific 
	 * to the plant class. This name appears in the
	 * game UI itself, so choose wisely.
	 */
	public abstract String getName();
	
	/**
	 * Tells how often this settable can do its stuff.
	 */
	public abstract int getCycleTime();
	
	/**
	 * Returns position of settable
	 * @return
	 */
	public Position getPosition(){
		return position;
	}
	
	public void setPosition(Position pos){
		position=pos;
	}
	
	public int getCost(){
		return cost;
	}
	
	/**
	 * Loads the parameters in a settable-specific way and returns them in a map.
	 */
	public static Map<String, Double> loadParameters(String filename) {
		Scanner inFile;
		Map<String, Double> parameters = new HashMap<String, Double>();
		try {
			inFile = new Scanner(new File(filename));
			while (inFile.hasNextLine()){
				String line = inFile.nextLine(); //each line should contain parameter and value
				String[] param = line.split("[ ]");
				parameters.put(param[0], Double.parseDouble(param[1]));
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			return null;
		}
		inFile.close();
		return parameters;
	}
	
	/**
	 * Simple, type in
	 */
	public boolean forceAction(GameState g) {
		ticksSinceAction=ticksToNextAction+1; //make tickcount higher than before, so it should action on next tick
		return true;
	}
	
	@Override
	public double getHitPoints() {
		return hitPoints;
	}

	@Override
	public void setHitPoints(double number) {
		hitPoints = number;	
	}
	
	/**
	 * Says how much happiness the plant adds to the game,
	 * or removes from it.
	 */
	public abstract double getHappiness();
}
