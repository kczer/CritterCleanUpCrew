package weapons;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import model.Actionable;
import model.GameState;
import moves.Move;

public abstract class Weapon implements Actionable {

	/**
	 * Attacks, possibly used.
	 */
	public boolean doAction(GameState g) {
		return false;
	}

	/**
	 * Loads the parameters in a weapon-specific way and returns them in a map.
	 */
	public static Map<String, Double> loadParameters(String filename) {
		Scanner inFile;
		Map<String, Double> parameters = new HashMap<String, Double>();
		try {
			inFile = new Scanner(new File(filename));
			while (inFile.hasNextLine()){
				String line = inFile.nextLine(); //each line should contain parameter and value
				String[] param = line.split("[ ]");
				parameters.put(param[0], Double.parseDouble(param[1]));
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			return null;
		}
		inFile.close();
		return parameters;
	}

	/**
	 * Possibly used.
	 */
	public Move nextMove(GameState g) {
		return null;
	}

}
