package views;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;





import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

import model.GameState;

public class TimeView extends JPanel {
	GameView mainView; 
	JLabel timeLabel = new JLabel(); 
	Timer timer;
        // to make sure it doesn't wait one second at the start  
     	public TimeView(GameView mainView){
		super();
		this.setOpaque(true);
		this.mainView = mainView;
		TimeClass tc = new TimeClass(300);
//    	timer = new Timer(1000,tc);
//    	timer.start();
		this.add(timeLabel);
	}
	 
	
	public void paint(Graphics g){
		super.paint(g);
		
		double timePassed = System.currentTimeMillis()-
				mainView.getCurrentGame().getState().getTimeOfStateBeginning();
		double percent;
		Color one;
		if (timePassed<GameState.BUILD_TIME){
			timeLabel.setText("BUILD");
			percent = timePassed/GameState.BUILD_TIME;
			one = Color.blue;
		}
		else{
			timeLabel.setText("ATTACK");
			percent = timePassed/GameState.PLAY_TIME;
			one=Color.red;
		}
		percent=1-percent;
		double barWidth = getWidth() * percent;
		g.setColor(one); //sets color of rectangle to red, takes up the whole bar
		g.fillRect(0, 0, getWidth(), getHeight());
		g.setColor(Color.GREEN); //sets color green
		g.drawRect(0, 0,(int) barWidth, getHeight()); //draw the outline of a rectangle that is green
		g.fillRect(0, 0,(int) barWidth, getHeight()); //however fill it with green in scale to happiness, see *HealthBarWidth.
		
	}
	
	public class TimeClass implements ActionListener {  
		int counter;
		public TimeClass(int counter)
		{
			this.counter = counter;
		}
		public void actionPerformed(ActionEvent e){
			if(GameFrameView.CURRENTPANEL == GameFrameView.GAMEVIEWPANEL)
			{
				counter--;
			}
			if(counter>=1){
				timeLabel.setText("Time left: "+counter);
			}
			else{
				timer.stop();
				timeLabel.setText("Game Over");
			}
		}
	}
	      
	

}